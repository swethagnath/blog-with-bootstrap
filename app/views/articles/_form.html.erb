<%= form_for @article do |f|%>
	<%if @article.errors.any?%>
		<ol>
			<%@article.errors.full_messages.each do |msg|%>
				<li><%= msg%></li>
			<%end%>
		</ol>
	<%end%>
	<div class="form-group">
		<label for="article_category_id">Category</label><br/>
		<%=f.collection_select :category_id,Category.all,:id,:name,prompt:"enter category",class:"form-control"%>  <span id="errorCategoryHandle"></span> <br/>
		<label for="article_title">Title</label><br/>
		<%=f.text_field :title ,class:"form-control-sm"%><span id="errorTitleHandle"></span><br/><br/>
		<label for="article_body">body</label> <span id="bodyErrorHandle"></span><br><br>
		<%= f.text_area :body, id: :editor1%><br/>
		<label for="article_publish_date">Publish date</label><br/>
		<%=f.date_select :publish_date%><br/><br/>
		<%=f.label :image%> <span id="imageErrorHandle"></span><br><br>
	    <%=f.file_field :image,class:"form-control-file"%><br/>
		<!-- <label for="article_feature_image_url">feature image</label><br/> -->
		<%#=f.text_field :feature_image_url%>
		<%= f.submit id: :submitHandle,class:"btn btn-primary btn-lg"%>
	</div>
<%end%>
<script>
	CKEDITOR.replace('editor1');
	var categoryHandle = document.getElementById('article_category_id');
	var errorCategoryHandle = document.getElementById('errorCategoryHandle');
	var	formHandle = document.getElementById('new_article');
	var titleHandle = document.getElementById('article_title');
	var errorTitleHandle = document.getElementById('errorTitleHandle');
	var bodyErrorHandle = document.getElementById('bodyErrorHandle');
	var imageHandle =  document.getElementById('article_image');
	var imageErrorHandle = document.getElementById('imageErrorHandle');
	var validator = {
	  categoryValid:false,
	  titleValid: false,
	  bodyValid:false,
	  imageValid:false
	};
	function formErrors(fieldGroup,fieldStatus){
		if(fieldStatus){
			fieldGroup.classList.remove('formError');
			fieldGroup.classList.add('formSuccess');
		}else{
			fieldGroup.classList.remove('formSuccess');
			fieldGroup.classList.add('formError'); 
		}
	}
	function errorHandleStyling(errorHandle,apply){
		if(apply === "apply"){
			errorHandle.classList.add("alert-danger");
			errorHandle.classList.add("errorMargin");
		}else{
			errorHandle.classList.remove("alert-danger");
			errorHandle.classList.add("alert-success");
			errorHandle.classList.add("errorMargin");
		}
	}
	function categoryValidation(){
	 	if(categoryHandle.value === ""){
	 		validator.categoryValid = false;
	 		errorHandleStyling(errorCategoryHandle,"apply");
	 		errorCategoryHandle.innerHTML = "can't be blank"
	 	}
	 	else{
	 		validator.categoryValid = true;
	 		errorCategoryHandle.innerHTML = "";
	 	}
	}
	function titleValidation(response){
		if(titleHandle.value === ""){
			validator.titleValid = false;
			errorHandleStyling(errorTitleHandle,"apply");
			errorTitleHandle.innerHTML = "can't be b lank";
			formErrors(titleHandle,validator.titleValid);
		}else if(!response){
			validator.titleValid = false;
			errorHandleStyling(errorTitleHandle,"apply");
			errorTitleHandle.innerHTML = "already taken";
			formErrors(titleHandle,validator.titleValid);
		}else{
			validator.titleValid = true;
			errorHandleStyling(errorTitleHandle,"not apply");
			errorTitleHandle.innerHTML = "can be used";
			formErrors(titleHandle,validator.titleValid);
		}
	}
	function bodyValidation(){
		var editorValue = CKEDITOR.instances.editor1.getData();
		if(editorValue === ""){
			validator.bodyValid = false;
			errorHandleStyling(bodyErrorHandle,"apply");
			bodyErrorHandle.innerHTML = "can't be blank";
		}else{
			validator.bodyValid = true;
			bodyErrorHandle.innerHTML = "";
		}
	}	
	function imageValidation(){
		if(imageHandle.value === ""){
			validator.imageValid = false;
			errorHandleStyling(imageErrorHandle,"apply");
			imageErrorHandle.innerHTML = "can't be blank"
		}else{
			validator.imageValid = true;
			imageErrorHandle.innerHTML = "";
		}
	}
	titleHandle.addEventListener('blur',function(){
		var xhr = new XMLHttpRequest();
		xhr.open('GET','/articles/article_title?title='+titleHandle.value,true);
		xhr.onreadystatechange = function(){
			if(xhr.readyState === 4 && xhr.status === 200){
				console.log(xhr.responseText);
				var response = JSON.parse(xhr.responseText);
				titleValidation(response["msg"]);
			}
		}
		xhr.send();
	},false);
	formHandle.addEventListener('submit',function(e){
		categoryValidation();
		titleValidation(true);
		bodyValidation();
		imageValidation();
		if(Object.values(validator).includes(false)){
			e.preventDefault();
			setTimeout(function(){
	        	submitHandle.disabled = false;
	      	},100);
		}		
	},false);	
	categoryHandle.addEventListener('change',function(){
		errorHandleStyling(errorCategoryHandle,"not apply");
		errorCategoryHandle.innerHTML = "";
	},false);
	imageHandle.addEventListener('click',function(){
		errorHandleStyling(imageErrorHandle,"not apply");
		imageErrorHandle.innerHTML = "";
	},false);
	CKEDITOR.on("instanceReady", function(event) {
    	event.editor.on("blur", function (){
        	var editorValue = CKEDITOR.instances.editor1.getData();
			if(editorValue !== ""){
				errorHandleStyling(bodyErrorHandle,"not apply");
				bodyErrorHandle.innerHTML = "";
			}
    	});
	});		
</script>
